 ---------
| THEORIE |
 ---------
 
Om een MPI-programma in parallel te draaien op meerdere workstations
(of meerdere nodes van een cluster), gebruik je het mpirun commando:
        
        - mpirun -np numProcesses -machinefile hostNameFile binaryFileName

Om nu (zonder toegang tot een cluster) je MPI-programma lokaal te draaien, type je echter:
        
        - mpirun -np 4 ./spmd

Dit start 4 threads op je lokale machine om het programma uit te voeren.

------------------------------------------------
De generieke vorm voor een MPI send commando is:
------------------------------------------------

MPI_Send( addressOfFirstValue,
          numberOfValues,
          typeOfValues,
          idOfDestination,
          messageTag,
          communicator );

 --------
| VRAGEN |
 --------

5.1 
SPMD staat voor Single Program Multiple Data; spmd.c is duidelijk een single program, 
maar wat is de multiple data die door de processen wordt gebruikt?  

De hoeveelheid CPU's die worden gebruikt bij het parallel uitvoeren van een programma.


-------------------------------------------------------------------------------------------
5.2.1 slicing
Als er P processen zijn en N iteraties (P < N), welke stappen van de iteratie voert process
0 dan uit? En welke process 1?





-------------------------------------------------------------------------------------------
5.2.2 chunks
Als er P processen zijn en N iteraties (P < N); welke stappen van de iteratie worden in de 
chunks methode dan uitgevoerd door process 0? En door process 1?


-------------------------------------------------------------------------------------------
5.3 
Hoe verschilt het masterWorker.c programma zich van het spmd.c programma?


 -----------------------------------
| OUTPUT MPIcircuitSatisfiability.c |
 -----------------------------------

 -np 1 
 Process 0 is checking the circuit...
 Process 0 finished in time 295.301869 seconds.
 A total of 81 solutions were found.

 -np 2 
 Process 0 is checking the circuit...
 Process 0 is checking the circuit...
 Process 0 finished in time 303.676169 seconds.
 A total of 81 solutions were found.

 -np 4 
 There are not enough slots available in the system to satisfy the 4
 slots that were requested by the application:
       add --oversubscribe 

 Process 0 is checking the circuit...
 Process 0 is checking the circuit...
 Process 0 is checking the circuit...
 Process 0 is checking the circuit...

 Process 0 finished in time 537.726665 seconds.
 A total of 81 solutions were found.
 
 Process 0 finished in time 537.723796 seconds.
 A total of 81 solutions were found.
 
 Process 0 finished in time 538.991181 seconds.
 A total of 81 solutions were found.
 
 Process 0 finished in time 539.181253 seconds.
 A total of 81 solutions were found.

 -np 8
 Process 0 is checking the circuit...
 Process 0 is checking the circuit...
 Process 0 is checking the circuit...
 Process 0 is checking the circuit...
 Process 0 is checking the circuit...
 Process 0 is checking the circuit...
 Process 0 is checking the circuit...
 Process 0 is checking the circuit...
 
 Process 0 finished in time 1075.071371 seconds.
 A total of 81 solutions were found.
 
 Process 0 finished in time 1075.490785 seconds.
 A total of 81 solutions were found.
 
 Process 0 finished in time 1076.883499 seconds.
 A total of 81 solutions were found.
 
 Process 0 finished in time 1076.874047 seconds.
 A total of 81 solutions were found.
 
 Process 0 finished in time 1076.952404 seconds.
 A total of 81 solutions were found.
 
 Process 0 finished in time 1078.696489 seconds.
 A total of 81 solutions were found.
 
 Process 0 finished in time 1078.669221 seconds.
 A total of 81 solutions were found.
 
 Process 0 finished in time 1078.727400 seconds.
 A total of 81 solutions were found.